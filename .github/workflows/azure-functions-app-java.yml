# This workflow will build a Java project and deploy it to an Azure Functions App on Windows or Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-java
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: maqsoftwareazure
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'maqsoftware'   # Set this to your function app name on Azure
  POM_XML_DIRECTORY: 'maqsoftware-app'    # Set this to the directory containing pom.xml file
  DISTRIBUTION: 'microsoft'                # Set this to the Java version to use (e.g., 'zulu', 'temurin', 'microsoft')
  JAVA_HOME: C:\hostedtoolcache\windows\Java_Microsoft_jdk\21.0.2\x64

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Change to ubuntu-latest if using Linux
    environment: dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up the Java SDK
    - name: Set up Java SDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    # Build the project with Maven
    - name: Restore project dependencies and build
      shell: pwsh
      run: |
        pushd './${{ env.POM_XML_DIRECTORY }}'
        mvn clean package
        popd

    # Deploy to Azure Function App
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.POM_XML_DIRECTORY }}/target/azure-functions'  # Ensure this path exists after packaging
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}  # Secret containing the publish profile
        respect-pom-xml: true
        respect-funcignore: false
        scm-do-build-during-deployment: false
        enable-oryx-build: false
        remote-build: false
